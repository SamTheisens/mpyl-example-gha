name: build
on:
  push:
    branches-ignore: [ 'main' ]

permissions: write-all

jobs:
  build-pipeline:
    env:
      DOCKER_REGISTRY_USR: ${{ github.actor }}
      DOCKER_REGISTRY_PSW: ${{ secrets.GITHUB_TOKEN }}
      MPYL_CONFIG_PATH: mpyl_config.yml
    runs-on: ubuntu-latest
    steps:
#      - name: Clone it
#        run: git clone --shallow-exclude main --single-branch --branch feature/test-174 "https://${{ env.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" .
#
#      - name: Git status
#        run: git status
#
#      - name: Show files
#        run: ls

      - name: Create requirements
        run: echo $'-i https://test.pypi.org/simple/\n--extra-index-url https://pypi.org/simple \nmpyl==198.2300' > requirements.txt

      - name: Cat
        run: cat requirements.txt

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
#        run: pip install -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple mpyl==185.2250

      - name: Install
        run: pip install -r requirements.txt

      - name: Version
        run: mpyl version

      - uses: jwalton/gh-find-current-pr@v1
        id: findPr

      - name: Clean
        run: rm requirements.txt

      - name: Init
        run: mpyl repo init -b ${{ github.ref }} -u https://${{ env.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Status
        run: mpyl repo status

      - name: Status
        run: mpyl build status

      - name: Run build
        run: pipenv run run
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: 'projects/**/*test*/*.xml'
          annotate_only: true

      - name: Upload k8s manifests
        uses: actions/upload-artifact@v3
        with:
          name: k8s-manifests
          path: projects/**/target/kubernetes/**

      - name: Clean up
        if: always()
        run: pipenv run clean
        env:
          PR_NUMBER: 1234