name: build
on:
  push:
    branches-ignore: [ 'main' ]

permissions: write-all

jobs:
  build-pipeline:
    env:
      DOCKER_REGISTRY_USR: ${{ github.actor }}
      DOCKER_REGISTRY_PSW: ${{ secrets.GITHUB_TOKEN }}
      MPYL_CONFIG_PATH: mpyl_config.yml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: pipenv install

      - name: Check Health
        run: pipenv run health

      - uses: jwalton/gh-find-current-pr@v1
        id: findPr

      - name: Show refs
        run: git show-ref

      - name: Show log
        run: git log --oneline --no-abbrev-commit

      - name: Show status again
        run: pipenv run repo
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}

      - name: Init repo
        run: pipenv run repo-init
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}

      - name: Show refs
        run: git show-ref

      - name: Show log
        run: git log --oneline --no-abbrev-commit

      - name: Show diff
        run: git diff --name-only 96b6be3d121ff1651506da3d6330f7df13c7a959 HEAD

      - name: Show status again
        run: pipenv run repo
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}

      - name: Show status
        run: pipenv run status
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}

      - name: Run build
        run: pipenv run run
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: 'projects/**/*test*/*.xml'
          annotate_only: true

      - name: Upload inflated helm charts
        uses: actions/upload-artifact@v3
        with:
          name: inflated-helm-charts
          path: projects/**/chart/**

      - name: Clean up
        if: always()
        run: pipenv run clean
        env:
          PR_NUMBER: 1234